name: User Service CI

on:
  push:
    branches: [master]
    paths:
      - "user-service/**"
      - ".github/workflows/user-service-ci.yml"
  pull_request:
    branches: [master]
    paths:
      - "user-service/**"
      - ".github/workflows/user-service-ci.yml"

jobs:
  test:
    name: Test User Service
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./user-service

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: ./user-service/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

  build-and-push:
    name: Build and Push Docker Image for User Service
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image to Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: ./user-service
          file: ./user-service/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/pollapp-user-service:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/pollapp-user-service:${{ github.run_number }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  update-manifests-with-tag:
    name: Update K8s Manifests with New Image Tag
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'

    steps:
      - name: Check for concurrent Polling Service CI workflow
        id: check-polling
        env:
          GH_TOKEN: ${{ secrets.POLLAPP_PAT }}
        run: |
          # Check if Polling Service CI is currently running for the same commit
          RUNNING_WORKFLOWS=$(gh run list --workflow "Polling Service CI" --branch master --status in_progress --json status,headSha | jq -r --arg sha "${{ github.sha }}" '.[] | select(.headSha == $sha) | .status')

          if [ ! -z "$RUNNING_WORKFLOWS" ]; then
            echo "polling_running=true" >> $GITHUB_OUTPUT
            echo "Polling Service CI is currently running for the same commit"
          else
            echo "polling_running=false" >> $GITHUB_OUTPUT
            echo "No concurrent Polling Service CI detected"
          fi

      - name: Wait for Polling Service CI to complete
        if: steps.check-polling.outputs.polling_running == 'true'
        env:
          GH_TOKEN: ${{ secrets.POLLAPP_PAT }}
        run: |
          echo "Waiting for Polling Service CI to complete before updating manifests..."

          # Wait up to 10 minutes for polling service to complete
          for i in {1..120}; do
            RUNNING_COUNT=$(gh run list --workflow "Polling Service CI" --branch master --status in_progress --json status,headSha | jq -r --arg sha "${{ github.sha }}" '[.[] | select(.headSha == $sha)] | length')
            
            if [ "$RUNNING_COUNT" -eq 0 ]; then
              echo "Polling Service CI has completed. Proceeding with User Service manifest update..."
              break
            fi
            
            echo "Waiting... (${i}/120 - 5s intervals)"
            sleep 5
            
            if [ $i -eq 120 ]; then
              echo "Timeout: Polling Service CI did not complete within 10 minutes"
              echo "Proceeding with User Service manifest update anyway..."
            fi
          done

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.POLLAPP_PAT }}
          fetch-depth: 0
          ref: master

      - name: Pull latest changes
        run: |
          git pull origin master

      - name: Update User Service manifest
        run: |
          IMAGE_TAG=${{ github.run_number }}
          echo "Updating user-service to build #${IMAGE_TAG}"
          sed -i "s|image: ${{ secrets.DOCKERHUB_USERNAME }}/pollapp-user-service:.*|image: ${{ secrets.DOCKERHUB_USERNAME }}/pollapp-user-service:${IMAGE_TAG}|g" kubernetes/user-service-deployment.yaml

      - name: Commit and Push updated manifests
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions-bot@github.com'
          git add kubernetes/

          if git diff --staged --quiet; then
            echo "No manifest changes detected."
          else
            echo "Committing manifest update..."
            git commit -m "Update User Service image to build #${{ github.run_number }} [skip ci]"
            git push origin master
          fi
