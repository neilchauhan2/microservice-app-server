version: "3.8"
services:
  mongodb:
    image: mongo:5.0
    container_name: microservice-mongodb
    restart: always
    ports:
      - "27017:27017"
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - microservice-network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 20s

  polling-service:
    build: "./polling-service"
    ports:
      - "${POLLING_SERVICE_PORT}:8000"
    env_file:
      - .env
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - PORT=8000
    depends_on:
      mongodb:
        condition: service_healthy
    restart: on-failure
    networks:
      - microservice-network

  user-service:
    build: "./user-service"
    ports:
      - "${USER_SERVICE_PORT}:8001"
    env_file:
      - .env
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRE=${JWT_EXPIRE}
      - PORT=8001
    depends_on:
      mongodb:
        condition: service_healthy
    restart: on-failure
    networks:
      - microservice-network

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - polling-service
      - user-service
    networks:
      - microservice-network

volumes:
  mongodb_data:
    driver: local

networks:
  microservice-network:
    driver: bridge
